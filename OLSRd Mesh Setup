# OLSR-Mesh setup on different Devices

Configuration of mesh networks comprises of two major steps:
a. Configuring wireless interface into Ad-Hoc mode
b. Setup of a daemon to handle routing (olsrd)

There are many mesh routing protocols like BATMAN, OLSR. Setting up OLSRD is the easiest and offers a lot of parameters to tweak in the mesh.
The RFC of OLSRD can be read to understand the underlying algorithms: https://tools.ietf.org/html/rfc3626
Properties of OLSRD can be tweaked by modifying 
	/etc/olsrd/olsrd.conf

## Raspberry Pi 3B+ - Raspbian Stretch

NOTE: Before proceeding, enable Serial Interface on RasPi to allow UART SSH. In case of Serial Interface not being enabled and any mistakes in the below steps, we may end up with a RasPi that can neither connect to the Wifi Router nor can be accessed through wire by UART-SSH. Learn how to enable Serial interface and access SSh through UART here.

1. Connect Raspberry Pi to PC using UART-USB connection. Use TX, RX, GND Pins of USB adaptor to connect to Raspi. 
2. Identify ttyUSB port of Raspi:
	ls /dev/ttyUSB*
	screen  /dev/ttyUSB1 115200
Use login id and Password will be promted.

2. Install olsrd
	sudo apt-get install olsrd 

3. Configure wireless interface by adding the following lines to /etc/networks/interfaces. It is a good practice to make a backup of the existing interfaces file.
	sudo cp /etc/network/interfaces /etc/networks/interfaces.orig
	sudo nano /etc/network/interfaces

Add these lines. Keep the all the parameters same except the address parameter on all devices. All the IP addresses must lie within the same subnet.

# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback
iface eth0 inet dhcp
auto wlan0

iface wlan0 inet static
  address 192.168.19.101
  netmask 255.255.255.0
  wireless-channel 1
  wireless-essid MeshX
  wireless-mode ad-hoc

4. Disable dhcpcd
NOTE that as soon as you run the first line, any existing Wifi connection will be stopped, and you will lose access to Raspberry PI completely, if you have SSHed wirelessly. Hence it is needed to run this using UART SSH. However, this can also be accomplished by SSHing wirelessly in another method.
A. UART:
	sudo systemctl disable dhcpcd.service.
	sudo reboot now
B: SSH
Create a new bash script adhoc.sh :
	sudo nano adhoc.sh
Add these lines
	#!/bin/bash
	sleep 2m
	sudo systemctl disable dhcpcd.service
	sudo reboot now
Give execution rights
	sudo chmod +x adhoc.sh

A challenge is that, once we disable dhcpcd, SSH will be closed. So we open a parallel terminal using screen and start the script and within 2 minutes (sleep 2m) we DETACH from this new terminal.
	screen -S adhoc # gives name to screen instance
New terminal opens
	./adhoc.sh
Detach from screen by pressing ctrl+A and then ctrl+D and wait.

On reboot, connect to SSH via UART and run olsrd.
	sudo olsrd -i wlan0 -d 1
The -d tag specifies the debugging level[0-9]. '0' means the program runs in the background.
Configure, reboot and run olsrd in all of the Raspberry Pis that need to be connected to this mesh.

Without olsrd being started, the devices are able to ping each other. olsrd makes the devices aware of the multiple paths existing between them and helps then utilise the links efficiently.


## oDroid XU4

## Ubuntu 18.04

1. Install olsrd
	sudo apt-get install olsrd 

2. Configure wireless interface by adding the following lines to /etc/networks/interfaces. It is a good practice to make a backup of the existing interfaces file.
	sudo cp /etc/network/interfaces /etc/networks/interfaces.orig
	sudo nano /etc/network/interfaces

Add these lines. Keep the all the parameters same except the address parameter on all devices. All the IP addresses must lie within the same subnet.

# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback
iface enp3s0 inet dhcp
auto wlp2s0
# wlp2s0 is the name of the Wireless Interface
iface wlp2s0 inet static
  address 192.168.19.101
  netmask 255.255.255.0
  wireless-channel 1
  wireless-essid MeshX
  wireless-mode ad-hoc

3. Reset system Networking
	sudo ip a flush wlp2s0
	sudo systemctl restart networking.service

4. Start OLSRD
	sudo olsrd -i wlan0 -d 1
	
The -d tag specifies the debugging level[0-9]. '0' means the program runs in the background.
Configure, reboot and run olsrd in all of the Raspberry Pis that need to be connected to this mesh.

Without olsrd being started, the devices are able to ping each other. olsrd makes the devices aware of the multiple paths existing between them and helps then utilise the links efficiently.